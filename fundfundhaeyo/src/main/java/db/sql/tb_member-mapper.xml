<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="loginMember">
		SELECT 
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_PROFILE
		     , USER_GRADE
		     , USER_MARKETING
		     , USER_ENROLL_DATE
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_MEMBER
		  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
		 WHERE USER_ID = ?
		   AND USER_PWD = ?
		   AND USER_STATUS IN ('Y','A')
	</entry>
	
	<entry key="insertMember">
		INSERT
		  INTO TB_MEMBER
		  (
		    USER_NO
		  , USER_ID
		  , USER_PWD
		  , USER_NAME
		  , USER_SSN
		  , USER_NICKNAME
		  , USER_PHONE
		  , USER_EMAIL
		  , USER_ADDRESS
		  , USER_MARKETING
		  )
		  VALUES
		  (
		    SEQ_USER_NO.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="insertMemberAttachment">
		INSERT
	      INTO TB_ATTACHMENT
			  (
			    ATTACHMENT_NO
			  , ATTACHMENT_USER_NO
			  , ATTACHMENT_ORIGIN_NAME
			  , ATTACHMENT_UPDATE_NAME
			  , ATTACHMENT_PATH
			  , ATTACHMENT_LEVEL
			  )
	    VALUES
			  (
			    SEQ_ATTACHMENT_NO.NEXTVAL
			  , SEQ_USER_NO.CURRVAL
			  , ?
			  , ?
			  , ?
			  , ?
			  )
	</entry>
	
	<entry key="idCheck">
		SELECT
		       COUNT(*) "COUNT"
		  FROM TB_MEMBER
		 WHERE USER_ID = ?
	</entry>
	
	<entry key="searchId">
		SELECT
		       USER_ID
		  FROM TB_MEMBER
		 WHERE USER_NAME = ?
		   AND USER_EMAIL = ?
		   AND USER_STATUS = 'Y'
    </entry>
    
    <entry key="searchPw">
		SELECT
		       USER_PWD
		  FROM TB_MEMBER
		 WHERE USER_ID = ?
		   AND USER_NAME = ?
		   AND USER_EMAIL = ?
		   AND USER_STATUS = 'Y'
	</entry>
		   
	<entry key="selectMemberList">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_PROFILE
		     , USER_GRADE
		     , USER_MARKETING
		     , USER_ENROLL_DATE
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_MEMBER
		  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
	</entry>
	
	<entry key="selectMemberLimitList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
		                       USER_NO
						     , USER_ID
						     , USER_PWD
						     , USER_NAME
						     , USER_SSN
						     , USER_NICKNAME
						     , USER_PHONE
						     , USER_EMAIL
						     , USER_ADDRESS
						     , USER_PROFILE
						     , USER_GRADE
						     , USER_MARKETING
						     , USER_ENROLL_DATE
						     , USER_MODIFY_DATE
						     , USER_TYPE
						     , USER_STATUS
						     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  				  FROM TB_MEMBER
		  				  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
		                 ORDER
		                    BY USER_NO DESC
		                 ) E 
		       ) 
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectMemberListCount">
		SELECT
		       COUNT(*) count
		  FROM TB_MEMBER
		 WHERE USER_STATUS = 'Y'
	</entry>
	
	<entry key="memberSearchId">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_PROFILE
		     , USER_GRADE
		     , USER_MARKETING
		     , USER_ENROLL_DATE
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_MEMBER
		  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
		 WHERE USER_ID = ?
	</entry>
	
	<entry key="updateMemberBanAllow">
		UPDATE TB_MEMBER
		   SET USER_STATUS = ?
		 WHERE USER_ID = ?
	</entry>
	
	<entry key="deleteMember">
		UPDATE TB_MEMBER
		   SET USER_STATUS = 'N'
		     , USER_MODIFY_DATE = SYSDATE
		 WHERE USER_ID = ?
		   AND USER_PWD = ?
	</entry>
	
	<entry key="updateMember">
		UPDATE
		       TB_MEMBER
		   SET USER_PHONE = ?
		     , USER_EMAIL = ?
		     , USER_ADDRESS = ?
		     , USER_MARKETING = ?
		     , USER_PROFILE = ?
		 WHERE USER_NO = ?
	</entry>
	
	<entry key="updateMemberAttachment">
		UPDATE
			   TB_ATTACHMENT
		   SET ATTACHMENT_USER_NO = ?
		     , ATTACHMENT_ORIGIN_NAME = ?
		     , ATTACHMENT_UPDATE_NAME = ?
		     , ATTACHMENT_PATH = ?
		 WHERE ATTACHMENT_NO = ?
	</entry>
	
	<entry key="selectMemberAttachment">
		SELECT
		       ATTACHMENT_NO
		     , ATTACHMENT_ORIGIN_NAME
		     , ATTACHMENT_UPDATE_NAME
		     , ATTACHMENT_PATH
		  FROM TB_ATTACHMENT
		 WHERE ATTACHMENT_USER_NO = ?
	</entry>
	
	<entry key="selectMember">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_PROFILE
		     , USER_GRADE
		     , USER_MARKETING
		     , USER_ENROLL_DATE
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_MEMBER
		  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
		 WHERE USER_NO = ?
	</entry>
	
	<entry key="checkMemberLikes">
		SELECT
		       LIKES_STATUS
		  FROM TB_LIKES
		 WHERE LIKES_USER_NO = ?
		   AND LIKES_PROJECT_NO = ?
		   AND LIKES_STATUS = 'Y'
	</entry>
	
	<entry key="insertMemberLikes">
		INSERT
		  INTO TB_LIKES
		     (
		       LIKES_USER_NO
		     , LIKES_PROJECT_NO
		     , LIKES_STATUS
		     )
		VALUES
			 (
			   ?
			 , ?
			 , 'Y'
			 )
	</entry>
	
	<entry key="deleteMemberLikes">
		DELETE
		       TB_LIKES
		 WHERE LIKES_USER_NO = ?
		   AND LIKES_PROJECT_NO = ?
		   AND LIKES_STATUS = 'Y'
	</entry>
	
	<entry key="selectProjectLikesList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT 
		                       LIKES_PROJECT_NO
		                     , PROJECT_TITLE
		                     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
		                     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		                     , PROJECT_END
		                  FROM TB_LIKES
		                  JOIN TB_PROJECT ON (LIKES_PROJECT_NO = PROJECT_NO)
		                  JOIN TB_SELLER ON (LIKES_PROJECT_NO = SELLER_PROJECT_NO)
		                  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		                 WHERE LIKES_USER_NO = ?
		                   AND LIKES_STATUS = 'Y'
		                   AND ATTACHMENT_LEVEL = 1
		                 ORDER
		                    BY PROJECT_NO DESC
		                 ) E
		        )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectMemberSellerList">
		SELECT 
		       COUNT(SELLER_PROJECT_NO) "COUNT"
		     , SUM(SELLER_FUNDING) "FUNDING"
		  FROM TB_SELLER
		 WHERE SELLER_USER_NO = ?
	</entry>
	
	<entry key="selectMemberBuyerList">
		SELECT 
		       COUNT(BUYER_PROJECT_NO) "COUNT"
		     , SUM(BUYER_FUNDING) "FUNDING"
		  FROM TB_BUYER
		 WHERE BUYER_USER_NO = ?
	</entry>
	
	<entry key="loginKakao">
		SELECT 
		       COUNT(USER_STATUS) "COUNT"
		  FROM TB_MEMBER
		 WHERE USER_ID = ?
		   AND USER_STATUS = 'Y'
	</entry>
	
	<entry key="selectKakao">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		  FROM TB_MEMBER
		 WHERE USER_ID = ?
		   AND USER_STATUS = 'Y'
	</entry>
	
	<entry key="enrollKakao">
		INSERT 
			  INTO TB_MEMBER
			  (
			    USER_NO
			  , USER_ID
			  , USER_PWD
              , USER_NAME
              , USER_SSN
			  , USER_NICKNAME
              , USER_PHONE
			  , USER_EMAIL
			  , USER_ENROLL_DATE
			  , USER_TYPE
			  , USER_ADDRESS
			  )
			  VALUES
			  (
			    SEQ_USER_NO.NEXTVAL
			  , ?
              , ?
              , ?
			  , ?
			  , ? 
			  , ?
              , ? 
			  , SYSDATE
			  , 'S'
			  , ? 
			  )
	</entry>
	
	<entry key="memberSearchNo">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , USER_SSN
		     , USER_NICKNAME
		     , USER_PHONE
		     , USER_EMAIL
		     , USER_ADDRESS
		     , USER_PROFILE
		     , USER_GRADE
		     , USER_MARKETING
		     , USER_ENROLL_DATE
		     , USER_MODIFY_DATE
		     , USER_TYPE
		     , USER_STATUS
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_MEMBER
		  JOIN TB_ATTACHMENT ON (USER_NO = ATTACHMENT_USER_NO)
		 WHERE USER_NO = ?
	</entry>
	
	<entry key="selectMemberTestingList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
		                       PROJECT_NO
		                     , USER_NAME "PROJECT_SELLER"
		                     , PJ_CATEGORY_NAME
		                     , PROJECT_OVERVIEW
		                     , PROJECT_TITLE
		                     , PROJECT_CONTENT
		                     , PROJECT_TAG
		                     , PROJECT_PRICE
		                     , PROJECT_START
		                     , PROJECT_END
		                     , PROJECT_PAYMENT_BUYER
		                     , PROJECT_PAYMENT_SELLER
		                     , PROJECT_STATUS
		                     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "PROJECT_IMG"
		                  FROM TB_PROJECT
		                  JOIN TB_MEMBER ON (USER_NO = PROJECT_SELLER)
		                  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		                  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		                 WHERE ATTACHMENT_LEVEL = 1
		                   AND PROJECT_STATUS = 'N'
		                   AND PROJECT_SELLER = ?
		                 ORDER
		                    BY PROJECT_NO DESC
		                 ) E
		        )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectMemberOngoingList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
		                       PROJECT_NO
		                     , USER_NAME "PROJECT_SELLER"
		                     , PJ_CATEGORY_NAME
		                     , PROJECT_OVERVIEW
		                     , PROJECT_TITLE
		                     , PROJECT_CONTENT
		                     , PROJECT_TAG
		                     , PROJECT_PRICE
		                     , PROJECT_START
		                     , PROJECT_END
		                     , PROJECT_PAYMENT_BUYER
		                     , PROJECT_PAYMENT_SELLER
		                     , PROJECT_STATUS
		                     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "PROJECT_IMG"
		                     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		                  FROM TB_PROJECT
		                  JOIN TB_MEMBER ON (USER_NO = PROJECT_SELLER)
		                  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		                  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		                  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		                 WHERE ATTACHMENT_LEVEL = 1
		                   AND PROJECT_STATUS = 'Y'
		                   AND PROJECT_SELLER = ?
		                 ORDER
		                    BY PROJECT_NO DESC
		                 ) E
		        )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectMemberBanList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
		                       PROJECT_NO
		                     , USER_NAME "PROJECT_SELLER"
		                     , PJ_CATEGORY_NAME
		                     , PROJECT_OVERVIEW
		                     , PROJECT_TITLE
		                     , PROJECT_CONTENT
		                     , PROJECT_TAG
		                     , PROJECT_PRICE
		                     , PROJECT_START
		                     , PROJECT_END
		                     , PROJECT_PAYMENT_BUYER
		                     , PROJECT_PAYMENT_SELLER
		                     , PROJECT_STATUS
		                     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "PROJECT_IMG"
		                     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		                  FROM TB_PROJECT
		                  JOIN TB_MEMBER ON (USER_NO = PROJECT_SELLER)
		                  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		                  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		                  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		                 WHERE ATTACHMENT_LEVEL = 1
		                   AND PROJECT_STATUS = 'B'
		                   AND PROJECT_SELLER = ?
		                 ORDER
		                    BY PROJECT_NO DESC
		                 ) E
		        )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="updatePwdMember">
		UPDATE TB_MEMBER
		   SET USER_PWD = ?
			 , USER_MODIFY_DATE = SYSDATE
		 WHERE USER_ID = ?
		   AND USER_PWD = ?
	</entry>
	
</properties>