<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectThumbnailList">
		SELECT
		       PROJECT_NO
		     , PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		     , PROJECT_TITLE
		     , PROJECT_OVERVIEW
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
		     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		     , PROJECT_END
		  FROM TB_PROJECT
		  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		 WHERE PROJECT_STATUS = 'Y'
		   AND ATTACHMENT_LEVEL = 1
		   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
		 ORDER
		    BY PROJECT_START
		     , PROJECT_NO
	</entry>
	
	<entry key="selectThumbnailListByOptionA">
		<![CDATA[
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY PROJECT_START
				     , PROJECT_NO
		        )
		 WHERE FUNDING <= 50
		 ]]>
	</entry>
	
	<entry key="selectThumbnailListByOptionB">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY PROJECT_START
				     , PROJECT_NO
		        )
		 WHERE FUNDING BETWEEN 50 AND 100
	</entry>
	
	<entry key="selectThumbnailListByOptionC">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY PROJECT_START
				     , PROJECT_NO
		        )
		 WHERE FUNDING >= 100
	</entry>
	
	<entry key="selectRankThumbnailList">
		SELECT
		       PROJECT_NO
		     , PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		     , PROJECT_TITLE
		     , PROJECT_OVERVIEW
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
		     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		     , PROJECT_END
		  FROM TB_PROJECT
		  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		 WHERE PROJECT_STATUS = 'Y'
		   AND ATTACHMENT_LEVEL = 1
		   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
		 ORDER
		    BY FUNDING DESC
	</entry>
	
	<entry key="selectRankThumbnailListByOptionA">
		<![CDATA[
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING <= 50
		 ]]>
	</entry>
	
	<entry key="selectRankThumbnailListByOptionB">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING BETWEEN 50 AND 100
	</entry>
	
	<entry key="selectRankThumbnailListByOptionC">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING >= 100
	</entry>
	
	<entry key="selectCategoryList">
		SELECT
		       PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		  FROM TB_PJ_CATEGORY
	</entry>
	
	<entry key="selectCategoryThumbnailList">
		SELECT
		       PROJECT_NO
		     , PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		     , PROJECT_TITLE
		     , PROJECT_OVERVIEW
		     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
		     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		     , PROJECT_END
		  FROM TB_PROJECT
		  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
		  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		 WHERE PROJECT_STATUS = 'Y'
		   AND ATTACHMENT_LEVEL = 1
           AND PJ_CATEGORY_NO = ?
           AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
		 ORDER
		    BY PROJECT_START
		     , PROJECT_NO
	</entry>
	
	<entry key="selectCategoryThumbnailListByOptionA">
		<![CDATA[
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND PJ_CATEGORY_NO = ?
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING <= 50
		 ]]>
	</entry>
	
	<entry key="selectCategoryThumbnailListByOptionB">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND PJ_CATEGORY_NO = ?
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING BETWEEN 50 AND 100
	</entry>
	
	<entry key="selectCategoryThumbnailListByOptionC">
		SELECT *
		  FROM (
		        SELECT
				       PROJECT_NO
				     , PJ_CATEGORY_NO
				     , PJ_CATEGORY_NAME
				     , PROJECT_TITLE
				     , PROJECT_OVERVIEW
				     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "TITLEIMG"
				     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
				     , PROJECT_END
				  FROM TB_PROJECT
				  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
				  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
				  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
				 WHERE PROJECT_STATUS = 'Y'
				   AND ATTACHMENT_LEVEL = 1
				   AND PJ_CATEGORY_NO = ?
				   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
				 ORDER
				    BY FUNDING DESC
		        )
		 WHERE FUNDING >= 100
	</entry>
	
	<entry key="selectProject">
		SELECT
		       PROJECT_NO
		     , PROJECT_SELLER
		     , PROJECT_OVERVIEW
		     , PROJECT_TITLE
		     , PROJECT_CONTENT
		     , PROJECT_TAG
		     , PROJECT_PRICE
		     , PROJECT_START
		     , PROJECT_END
		     , PROJECT_PAYMENT_BUYER
		     , PROJECT_PAYMENT_SELLER
		     , PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		     , SELLER_FUNDING
		     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
		  FROM TB_PROJECT
		  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
		 WHERE PROJECT_STATUS = 'Y'
		   AND PROJECT_NO = ?
		   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
	</entry>
	
	<entry key="selectAttachmentList">
		SELECT
		       ATTACHMENT_NO
		     , ATTACHMENT_UPDATE_NAME
		     , ATTACHMENT_PATH
		  FROM TB_ATTACHMENT
		 WHERE ATTACHMENT_PROJECT_NO = ?
	</entry>
	
	<entry key="selectProjectBuyer">
		SELECT COUNT(*) "COUNT"
		  FROM TB_BUYER
		 WHERE BUYER_PROJECT_NO = ?
	</entry>
	
	<entry key="selectProjectLiker">
		SELECT COUNT(*) "COUNT"
		  FROM TB_LIKES
		 WHERE LIKES_PROJECT_NO = ?
	</entry>
	
	<entry key="selectCategoryNo">
		SELECT PJ_CATEGORY_NO
		  FROM TB_PJ_CATEGORY
		 WHERE PJ_CATEGORY_NAME = ?
	</entry>
	
	<entry key="insertProject">
		INSERT
		  INTO TB_PROJECT
		     (
		       PROJECT_NO
		     , PROJECT_SELLER
		     , PROJECT_CATEGORY_NO
		     , PROJECT_OVERVIEW
		     , PROJECT_TITLE
		     , PROJECT_CONTENT
		     , PROJECT_TAG
		     , PROJECT_PRICE
		     , PROJECT_START
		     , PROJECT_END
		     , PROJECT_PAYMENT_BUYER
		     , PROJECT_PAYMENT_SELLER
		     )
		VALUES
		     (
		       SEQ_PROJECT_NO.NEXTVAL
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     )
	</entry>
	
	<entry key="insertAttachmentList">
		INSERT
		  INTO TB_ATTACHMENT
		     (
		       ATTACHMENT_NO
		     , ATTACHMENT_PROJECT_NO
		     , ATTACHMENT_ORIGIN_NAME
		     , ATTACHMENT_UPDATE_NAME
		     , ATTACHMENT_PATH
		     , ATTACHMENT_LEVEL
		     )
		VALUES
		     (
		       SEQ_ATTACHMENT_NO.NEXTVAL
		     , SEQ_PROJECT_NO.CURRVAL
		     , ?
		     , ?
		     , ?
		     , ?
		     )
	</entry>
	
	<entry key="selectProjectListCount">
		SELECT
		       COUNT(*) count
		  FROM TB_PROJECT
		 WHERE PROJECT_STATUS = 'Y'
		   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
	</entry>
	
	<entry key="selectProjectList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
						       PROJECT_NO
						     , USER_NAME "PROJECT_SELLER"
						     , PJ_CATEGORY_NAME
						     , PROJECT_OVERVIEW
						     , PROJECT_TITLE
						     , PROJECT_CONTENT
						     , PROJECT_TAG
						     , PROJECT_PRICE
						     , TRUNC(SELLER_FUNDING / PROJECT_PRICE * 100) "FUNDING"
						     , PROJECT_START
						     , PROJECT_END
						     , PROJECT_PAYMENT_BUYER
						     , PROJECT_PAYMENT_SELLER
						     , PROJECT_STATUS
						     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "PROJECT_IMG"
						  FROM TB_PROJECT
						  JOIN TB_MEMBER ON (USER_NO = PROJECT_SELLER)
						  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
						  JOIN TB_SELLER ON (PROJECT_NO = SELLER_PROJECT_NO)
						  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
						 WHERE ATTACHMENT_LEVEL = 1
						   AND PROJECT_STATUS = 'Y'
						   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
						 ORDER
						    BY PROJECT_NO DESC
		                 ) E 
		       ) 
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectProjectUpdateList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, E.*
		          FROM (
		                SELECT
						       PROJECT_NO
						     , USER_NAME "PROJECT_SELLER"
						     , PJ_CATEGORY_NAME
						     , PROJECT_OVERVIEW
						     , PROJECT_TITLE
						     , PROJECT_CONTENT
						     , PROJECT_TAG
						     , PROJECT_PRICE
						     , PROJECT_START
						     , PROJECT_END
						     , PROJECT_PAYMENT_BUYER
						     , PROJECT_PAYMENT_SELLER
						     , PROJECT_STATUS
						     , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "PROJECT_IMG"
						  FROM TB_PROJECT
						  JOIN TB_MEMBER ON (USER_NO = PROJECT_SELLER)
						  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
						  JOIN TB_ATTACHMENT ON (PROJECT_NO = ATTACHMENT_PROJECT_NO)
						 WHERE ATTACHMENT_LEVEL = 1
						   AND PROJECT_STATUS = 'N'
						 ORDER
						    BY PROJECT_NO DESC
		                 ) E 
		       ) 
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="projectSearchNo">
		SELECT
		       PROJECT_NO
		     , PROJECT_SELLER
		     , PROJECT_OVERVIEW
		     , PROJECT_TITLE
		     , PROJECT_CONTENT
		     , PROJECT_TAG
		     , PROJECT_PRICE
		     , PROJECT_START
		     , PROJECT_END
		     , PROJECT_PAYMENT_BUYER
		     , PROJECT_PAYMENT_SELLER
		     , PJ_CATEGORY_NO
		     , PJ_CATEGORY_NAME
		     , PROJECT_STATUS
		  FROM TB_PROJECT
		  JOIN TB_PJ_CATEGORY ON (PROJECT_CATEGORY_NO = PJ_CATEGORY_NO)
		 WHERE PROJECT_STATUS = 'N'
		   AND PROJECT_NO = ?
	</entry>
	
	<entry key="updateProjectBanAllow">
		UPDATE TB_PROJECT
		   SET PROJECT_STATUS = ?
		 WHERE PROJECT_NO = ?
	</entry>
	
	<entry key="insertProjectSellerList">
		INSERT
		  INTO TB_SELLER
		     (
		       SELLER_USER_NO
		     , SELLER_PROJECT_NO
		     )
		VALUES
		     (
		       ?
		     , ?
		     )
	</entry>
	
	<entry key="insertProjectBanAllowNotice">
		INSERT
		  INTO TB_NOTICE
		     (
		       NOTICE_NO
		     , NOTICE_TITLE
		     , NOTICE_CONTENT
		     , NOTICE_WRITER
		     , NOTICE_TYPE
		     , NOTICE_RECEIVER_NO
		     )
		VALUES
			 (
			   SEQ_NOTICE_NO.NEXTVAL
			 , '프로젝트 심사 결과 안내'
			 , ?
			 , 1
			 , 2
			 , ?
			 )
	</entry>
	
	<entry key="insertProjectOption">
		INSERT
		  INTO TB_FUNDING_OPTION
		     (
		       OPTION_NO
		     , OPTION_PROJECT_NO
		     , OPTION_AMOUNT1
		     , OPTION_REWARD1
		     , OPTION_AMOUNT2
		     , OPTION_REWARD2
		     , OPTION_AMOUNT3
		     , OPTION_REWARD3
		     )
		VALUES
			 (
			   SEQ_OPTION_NO.NEXTVAL
			 , ?
			 , ?
			 , 1
			 , ?
			 , 2
			 , ?
			 , 3
			 )
	</entry>
	
	<entry key="selectTestingProjectListCount">
		SELECT
		       COUNT(*) count
		  FROM TB_PROJECT
		 WHERE PROJECT_STATUS = 'N'
		   AND PROJECT_SELLER = ?
	</entry>
	
	<entry key="selectOngoingProjectListCount">
		SELECT
		       COUNT(*) count
		  FROM TB_PROJECT
		 WHERE PROJECT_STATUS = 'Y'
		   AND PROJECT_SELLER = ?
		   AND SYSDATE BETWEEN PROJECT_START AND PROJECT_END
	</entry>
	
	<entry key="selectBanProjectListCount">
		SELECT
		       COUNT(*) count
		  FROM TB_PROJECT
		 WHERE PROJECT_STATUS = 'B'
		   AND PROJECT_SELLER = ?
	</entry>
	
	<entry key="insertProjectChat">
		INSERT
		  INTO TB_CHAT
		  (
		    CHAT_NO
		  , CHAT_CONTENT
		  , CHAT_PROJECT_NO
		  , CHAT_WRITER
		  )
		VALUES
		  (
		    SEQ_CHAT_NO.NEXTVAL
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="selectChatList">
		SELECT
		       CHAT_NO
		     , CHAT_CONTENT
		     , USER_NAME "CHAT_WRITER"
		     , TO_CHAR(CHAT_CREATE_DATE, 'YY/MM/DD HH:MI') "CHAT_CREATE_DATE"
             , ATTACHMENT_PATH || ATTACHMENT_UPDATE_NAME "USER_IMG"
		  FROM TB_CHAT
		  JOIN TB_MEMBER ON (USER_NO = CHAT_WRITER)
          JOIN TB_ATTACHMENT ON (ATTACHMENT_NO = CHAT_WRITER)
		 WHERE CHAT_STATUS = 'Y'
		   AND CHAT_PROJECT_NO = ?
		 ORDER
		    BY CHAT_NO
	</entry>
	
	<entry key="selectProjectOption">
		SELECT COUNT(*) "COUNT"
		  FROM TB_FUNDING_OPTION
		 WHERE OPTION_PROJECT_NO = ?
		   AND ? IN (OPTION_AMOUNT1, OPTION_AMOUNT2, OPTION_AMOUNT3)
	</entry>
	
	<entry key="insertProjectBuyer">
		INSERT
		  INTO TB_BUYER
		     (
		       BUYER_USER_NO
		     , BUYER_PROJECT_NO
		     , BUYER_FUNDING
		     )
		VALUES
		     (
		       ?
		     , ?
		     , ?
		     )
	</entry>
	
	<entry key="selectProjectSeller">
		SELECT
		       COUNT(*) "COUNT"
		  FROM TB_SELLER
		 WHERE SELLER_USER_NO = ?
		   AND SELLER_PROJECT_NO = ?
	</entry>
	
	<entry key="insertProjectSeller">
		INSERT
		  INTO TB_SELLER
		     (
		       SELLER_USER_NO
		     , SELLER_PROJECT_NO
		     , SELLER_FUNDING
		     )
		VALUES
		     (
		       ?
		     , ?
		     , ?
     )
	</entry>
	
	<entry key="updateProjectSeller">
		UPDATE TB_SELLER
		   SET SELLER_FUNDING = SELLER_FUNDING + ?
		 WHERE SELLER_USER_NO = ?
		   AND SELLER_PROJECT_NO = ?
	</entry>
	
	<entry key="insertProjectOrder">
		INSERT
		  INTO TB_ORDER
		     (
		       ORDER_NO
		     , ORDER_USER_NO
		     , ORDER_PROJECT_NO
		     , ORDER_OPTION_NO
		     , ORDER_STATUS
		     , ORDER_PAYMENT_NO
		     )
		VALUES
		     (
		       SEQ_ORDER_NO.NEXTVAL
		     , ?
		     , ?
		     , ?
		     , 'Y'
		     , ?
		     )
	</entry>
	
	<entry key="insertProjectPayment">
		INSERT
		  INTO TB_PAYMENT
		     (
		       PAYMENT_NO
		     , PAYMENT_USER_NO
		     , PAYMENT_PROJECT_NO
		     , PAYMENT_AMOUNT
		     , PAYMENT_METHOD
		     , PAYMENT_STATUS
		     )
		VALUES
		     (
		       ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , 'Y'
		     )
	</entry>
	
</properties>